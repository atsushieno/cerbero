From d8560587bcd61a7beb13a8da941175412744f22a Mon Sep 17 00:00:00 2001
From: Nirbheek Chauhan <nirbheek@centricular.com>
Date: Wed, 14 Aug 2019 13:28:31 +0530
Subject: [PATCH 14/22] WIP: gspawn: Do not allow spawning or making pipes on
 UWP

_pipe(), _wspawn*() are not allowed on UWP apps, and will cause
a Windows App Certification Kit error.

Set errno as ENOSYS instead of EACCES so that it's slightly clearer to
the user that they shouldn't use the gspawn API on UWP.
---
 glib/gspawn-win32.c | 15 +++++++++++++--
 glib/meson.build    |  7 +++++--
 2 files changed, 18 insertions(+), 4 deletions(-)

diff --git a/glib/gspawn-win32.c b/glib/gspawn-win32.c
index c1b024c..0ba34f9 100644
--- a/glib/gspawn-win32.c
+++ b/glib/gspawn-win32.c
@@ -303,6 +303,8 @@ static gboolean
 make_pipe (gint     p[2],
            GError **error)
 {
+  /* pipes are not available on UWP */
+#ifndef G_WINAPI_ONLY_APP
   if (_pipe (p, 4096, _O_BINARY) < 0)
     {
       int errsv = errno;
@@ -313,6 +315,7 @@ make_pipe (gint     p[2],
       return FALSE;
     }
   else
+#endif
     return TRUE;
 }
 
@@ -488,6 +491,8 @@ do_spawn_directly (gint                 *exit_status,
       return FALSE;
     }
 
+  /* Spawning processes is not allowed on UWP */
+#ifndef G_WINAPI_ONLY_APP
   if (flags & G_SPAWN_SEARCH_PATH)
     if (wenvp != NULL)
       rc = _wspawnvpe (mode, wargv0, (const wchar_t **) wargv, (const wchar_t **) wenvp);
@@ -498,8 +503,10 @@ do_spawn_directly (gint                 *exit_status,
       rc = _wspawnve (mode, wargv0, (const wchar_t **) wargv, (const wchar_t **) wenvp);
     else
       rc = _wspawnv (mode, wargv0, (const wchar_t **) wargv);
-
   errsv = errno;
+#else
+  errsv = ENOSYS;
+#endif
 
   g_free (wargv0);
   g_strfreev ((gchar **) wargv);
@@ -753,12 +760,16 @@ do_spawn_with_fds (gint                 *exit_status,
   whelper = g_utf8_to_utf16 (helper_process, -1, NULL, NULL, NULL);
   g_free (helper_process);
 
+  /* Spawning processes is not allowed on UWP */
+#ifndef G_WINAPI_ONLY_APP
   if (wenvp != NULL)
     rc = _wspawnvpe (P_NOWAIT, whelper, (const wchar_t **) wargv, (const wchar_t **) wenvp);
   else
     rc = _wspawnvp (P_NOWAIT, whelper, (const wchar_t **) wargv);
-
   errsv = errno;
+#else
+  errsv = ENOSYS;
+#endif
 
   g_free (whelper);
   g_strfreev ((gchar **) wargv);
diff --git a/glib/meson.build b/glib/meson.build
index 2858c02..d3c2de4 100644
--- a/glib/meson.build
+++ b/glib/meson.build
@@ -394,7 +394,7 @@ pkg.generate(libglib,
 )
 
 # On Windows, glib needs a spawn helper for g_spawn* API
-if host_system == 'windows'
+if host_system == 'windows' and not glib_conf.has('G_WINAPI_ONLY_APP')
   if host_machine.cpu_family() == 'x86'
     executable('gspawn-win32-helper', 'gspawn-win32-helper.c',
       install : true,
@@ -418,7 +418,10 @@ if host_system == 'windows'
       include_directories : configinc,
       dependencies : [libglib_dep])
   endif
-else
+endif
+
+# gtester has not been ported to Windows yet
+if host_system != 'windows'
   gtester = executable('gtester', 'gtester.c',
     install : true,
     c_args : ['-UG_DISABLE_ASSERT'],
-- 
2.27.0.windows.1

